/*
 * StatusCake API
 *
 * Copyright (c) 2021 StatusCake
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * API version: 1.0.0-beta.1
 * Contact: support@statuscake.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package statuscake

import (
	"encoding/json"
	"fmt"
)

// UptimeTestCheckRate Number of seconds between tests
type UptimeTestCheckRate int32

const (
	// UptimeTestCheckRateConstant a constant check rate.
	UptimeTestCheckRateConstant UptimeTestCheckRate = 0
	// UptimeTestCheckRateThirtySeconds a check rate of 30 seconds.
	UptimeTestCheckRateThirtySeconds UptimeTestCheckRate = 30
	// UptimeTestCheckRateOneMinute a check rate of 1 minute.
	UptimeTestCheckRateOneMinute UptimeTestCheckRate = 60
	// UptimeTestCheckRateFiveMinutes a check rate of 5 minutes.
	UptimeTestCheckRateFiveMinutes UptimeTestCheckRate = 300
	// UptimeTestCheckRateFifteenMinutes a check rate of 15 minutes.
	UptimeTestCheckRateFifteenMinutes UptimeTestCheckRate = 900
	// UptimeTestCheckRateThirtyMinutes a check rate of 30 minutes.
	UptimeTestCheckRateThirtyMinutes UptimeTestCheckRate = 1800
	// UptimeTestCheckRateOneHour a check rate of 1 hour.
	UptimeTestCheckRateOneHour UptimeTestCheckRate = 3600
	// UptimeTestCheckRateOneDay a check rate of 1 day.
	UptimeTestCheckRateOneDay UptimeTestCheckRate = 86400
)

func (v *UptimeTestCheckRate) UnmarshalJSON(src []byte) error {
	var value int32
	if err := json.Unmarshal(src, &value); err != nil {
		return err
	}

	ev := UptimeTestCheckRate(value)
	if !ev.Valid() {
		return fmt.Errorf("%+v is not a valid UptimeTestCheckRate", value)
	}

	*v = ev
	return nil
}

// Valid determines if the value is valid.
func (v UptimeTestCheckRate) Valid() bool {
	return v == UptimeTestCheckRateConstant || v == UptimeTestCheckRateThirtySeconds || v == UptimeTestCheckRateOneMinute || v == UptimeTestCheckRateFiveMinutes || v == UptimeTestCheckRateFifteenMinutes || v == UptimeTestCheckRateThirtyMinutes || v == UptimeTestCheckRateOneHour || v == UptimeTestCheckRateOneDay
}

// UptimeTestCheckRateValues returns the values of UptimeTestCheckRate
func UptimeTestCheckRateValues() []int32 {
	return []int32{
		0,
		30,
		60,
		300,
		900,
		1800,
		3600,
		86400,
	}
}
