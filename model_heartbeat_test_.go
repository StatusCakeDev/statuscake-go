/*
 * StatusCake API
 *
 * Copyright (c) 2023
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * API version: 1.2.0
 * Contact: support@statuscake.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package statuscake

import (
	"encoding/json"
	"time"
)

// HeartbeatTest struct for HeartbeatTest
type HeartbeatTest struct {
	// Heartbeat check ID
	ID string `json:"id"`
	// Name of the check
	Name string `json:"name"`
	// URL of the check
	WebsiteURL string `json:"url"`
	// Number of seconds since the last ping before the check is considered down
	Period int32 `json:"period"`
	// List of contact group IDs
	ContactGroups []string `json:"contact_groups"`
	// Name of the hosting provider
	Host *string `json:"host,omitempty"`
	// When the check was last run (RFC3339 format)
	LastTested *time.Time `json:"last_tested_at,omitempty"`
	// Whether the check should be run
	Paused bool                `json:"paused"`
	Status HeartbeatTestStatus `json:"status"`
	// List of tags
	Tags []string `json:"tags"`
	// Uptime percentage for a check
	Uptime float32 `json:"uptime"`
}

// NewHeartbeatTest instantiates a new HeartbeatTest object.
// This constructor will assign default values to properties that have it
// defined, and makes sure properties required by API are set, but the set of
// arguments will change when the set of required properties is changed.
func NewHeartbeatTest(id string, name string, url string, period int32, contactGroups []string, paused bool, status HeartbeatTestStatus, tags []string, uptime float32) *HeartbeatTest {
	return &HeartbeatTest{
		ID:            id,
		Name:          name,
		WebsiteURL:    url,
		Period:        period,
		ContactGroups: contactGroups,
		Paused:        paused,
		Status:        status,
		Tags:          tags,
		Uptime:        uptime,
	}
}

// MarshalJSON serialises data in the struct to JSON.
func (o HeartbeatTest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.ID
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["url"] = o.WebsiteURL
	}
	if true {
		toSerialize["period"] = o.Period
	}
	if true {
		toSerialize["contact_groups"] = o.ContactGroups
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.LastTested != nil {
		toSerialize["last_tested_at"] = o.LastTested
	}
	if true {
		toSerialize["paused"] = o.Paused
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["uptime"] = o.Uptime
	}
	return json.Marshal(toSerialize)
}
